"use strict";(self.webpackChunkjs_and_ts_in_depth_elective=self.webpackChunkjs_and_ts_in_depth_elective||[]).push([[524],{1846:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>c,toc:()=>t});const c=JSON.parse('{"id":"advanced_concepts/execution_context_and_scopes","title":"Contexto de ejecuci\xf3n y scopes","description":"El contexto de ejecuci\xf3n (Execution Context) es el entorno donde se eval\xfaa y ejecuta el c\xf3digo JavaScript. Cada vez que se llama una funci\xf3n, se crea un nuevo contexto.","source":"@site/docs/03_advanced_concepts/11_execution_context_and_scopes.md","sourceDirName":"03_advanced_concepts","slug":"/advanced_concepts/execution_context_and_scopes","permalink":"/JS_and_TS_In-depth_Elective/docs/advanced_concepts/execution_context_and_scopes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03_advanced_concepts/11_execution_context_and_scopes.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11},"sidebar":"tutorialSidebar","previous":{"title":"Currying y composici\xf3n","permalink":"/JS_and_TS_In-depth_Elective/docs/advanced_concepts/currying_and_composition"},"next":{"title":"POO, Buenas Pr\xe1cticas, y Principios","permalink":"/JS_and_TS_In-depth_Elective/docs/category/poo-buenas-pr\xe1cticas-y-principios"}}');var i=s(4848),o=s(8453);const d={sidebar_position:11},l="Contexto de ejecuci\xf3n y scopes",r={},t=[{value:"Tipos de contexto",id:"tipos-de-contexto",level:2},{value:"Estructura del contexto de ejecuci\xf3n",id:"estructura-del-contexto-de-ejecuci\xf3n",level:2},{value:"Ejemplo de pila de ejecuci\xf3n",id:"ejemplo-de-pila-de-ejecuci\xf3n",level:2},{value:"\xbfQu\xe9 es el scope (\xe1mbito)?",id:"qu\xe9-es-el-scope-\xe1mbito",level:2},{value:"Tipos de scope",id:"tipos-de-scope",level:3},{value:"Scope Chain (cadena de \xe1mbitos)",id:"scope-chain-cadena-de-\xe1mbitos",level:2},{value:"Shadowing y Hoisting",id:"shadowing-y-hoisting",level:2},{value:"Shadowing",id:"shadowing",level:3},{value:"Hoisting",id:"hoisting",level:3},{value:"Contexto y Scope",id:"contexto-y-scope",level:2},{value:"Principios recomendados",id:"principios-recomendados",level:2},{value:"Referencias",id:"referencias",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"contexto-de-ejecuci\xf3n-y-scopes",children:"Contexto de ejecuci\xf3n y scopes"})}),"\n",(0,i.jsxs)(n.p,{children:["El ",(0,i.jsx)(n.strong,{children:"contexto de ejecuci\xf3n"})," (",(0,i.jsx)(n.em,{children:"Execution Context"}),") es el entorno donde se eval\xfaa y ejecuta el c\xf3digo JavaScript. Cada vez que se llama una funci\xf3n, se crea un nuevo contexto."]}),"\n",(0,i.jsxs)(n.p,{children:["El motor de JavaScript utiliza una ",(0,i.jsx)(n.strong,{children:"pila de ejecuci\xf3n (call stack)"})," para manejar estos contextos, empujando (push) y extrayendo (pop) contextos conforme se llaman y retornan funciones."]}),"\n",(0,i.jsx)(n.h2,{id:"tipos-de-contexto",children:"Tipos de contexto"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Tipo"}),(0,i.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Global"})}),(0,i.jsx)(n.td,{children:"Se crea al iniciar el programa, \xfanico y persistente"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"De funci\xf3n"})}),(0,i.jsx)(n.td,{children:"Se crea cada vez que se llama una funci\xf3n"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Eval (evitar)"})}),(0,i.jsxs)(n.td,{children:["Contexto generado por el uso de ",(0,i.jsx)(n.code,{children:"eval()"})," (no recomendado)"]})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"estructura-del-contexto-de-ejecuci\xf3n",children:"Estructura del contexto de ejecuci\xf3n"}),"\n",(0,i.jsx)(n.p,{children:"Cada contexto contiene:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Objeto de variable (Variable Environment):","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Declaraciones ",(0,i.jsx)(n.code,{children:"var"}),", funciones, ",(0,i.jsx)(n.code,{children:"let"}),", ",(0,i.jsx)(n.code,{children:"const"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Scope Chain:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Acceso a variables en niveles superiores"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Valor de ",(0,i.jsx)(n.code,{children:"this"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Determinado din\xe1micamente (en funciones normales) o l\xe9xicamente (en arrow functions)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"ejemplo-de-pila-de-ejecuci\xf3n",children:"Ejemplo de pila de ejecuci\xf3n"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"function greet(name: string) {\n  return `Hola, ${name}`;\n}\n\nfunction welcome() {\n  const message = greet('David');\n  console.log(message);\n}\n\nwelcome();\n"})}),"\n",(0,i.jsx)(n.p,{children:"La pila de ejecuci\xf3n ser\xeda:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Global context"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"welcome()"})," context"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"greet()"})," context"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"qu\xe9-es-el-scope-\xe1mbito",children:"\xbfQu\xe9 es el scope (\xe1mbito)?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Scope"})," es el conjunto de reglas que determina ",(0,i.jsx)(n.strong,{children:"d\xf3nde y c\xf3mo se puede acceder a las variables"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"tipos-de-scope",children:"Tipos de scope"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Tipo de Scope"}),(0,i.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Global"})}),(0,i.jsx)(n.td,{children:"Fuera de cualquier funci\xf3n o bloque"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Funci\xf3n"})}),(0,i.jsx)(n.td,{children:"Dentro de una funci\xf3n"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Bloque"})}),(0,i.jsxs)(n.td,{children:["Dentro de ",(0,i.jsx)(n.code,{children:"{}"})," como en ",(0,i.jsx)(n.code,{children:"if"}),", ",(0,i.jsx)(n.code,{children:"for"}),", ",(0,i.jsx)(n.code,{children:"while"}),", etc. (solo con ",(0,i.jsx)(n.code,{children:"let"})," y ",(0,i.jsx)(n.code,{children:"const"}),")"]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Por ejemplo:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"const x = 10;                 // scope global\n\nfunction test() {\n  const y = 20;               // scope de funci\xf3n\n  if (true) {\n    const z = 30;             // scope de bloque\n    console.log(x, y, z);     // 10, 20, 30\n  }\n  // console.log(z);          // \u274c Error: z no est\xe1 definido\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"scope-chain-cadena-de-\xe1mbitos",children:"Scope Chain (cadena de \xe1mbitos)"}),"\n",(0,i.jsx)(n.p,{children:"Cuando se accede a una variable, JS busca en el orden:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"En el scope actual"}),"\n",(0,i.jsx)(n.li,{children:"En el scope del padre"}),"\n",(0,i.jsx)(n.li,{children:"Hasta llegar al scope global"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"const a = 'Global';\n\nfunction outer() {\n  const b = 'Outer';\n  function inner() {\n    const c = 'Inner';\n    console.log(a, b, c); // Global, Outer, Inner\n  }\n  inner();\n}\nouter();\n"})}),"\n",(0,i.jsx)(n.h2,{id:"shadowing-y-hoisting",children:"Shadowing y Hoisting"}),"\n",(0,i.jsx)(n.h3,{id:"shadowing",children:"Shadowing"}),"\n",(0,i.jsxs)(n.p,{children:["Una variable ",(0,i.jsx)(n.strong,{children:"en un scope m\xe1s interno"})," puede ",(0,i.jsx)(n.strong,{children:"ocultar"})," una variable del mismo nombre en un scope externo."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"const name = 'David';\n\nfunction sayHello() {\n  const name = 'Ana';     // oculta a 'David'\n  console.log(name);      // Ana\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"hoisting",children:"Hoisting"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Las ",(0,i.jsx)(n.strong,{children:"declaraciones"})," con ",(0,i.jsx)(n.code,{children:"var"})," y ",(0,i.jsx)(n.code,{children:"function"})," se mueven arriba del scope."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"let"})," y ",(0,i.jsx)(n.code,{children:"const"})," son ",(0,i.jsx)(n.strong,{children:"hoisted"}),", pero en zona ",(0,i.jsx)(n.strong,{children:"temporalmente muerta (TDZ)"})," hasta su inicializaci\xf3n."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"console.log(x);    // undefined\nvar x = 5;\n\nconsole.log(y);    // \u274c Error\nlet y = 10;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"contexto-y-scope",children:"Contexto y Scope"}),"\n",(0,i.jsx)(n.mermaid,{value:"flowchart TD\n    A[Inicio ejecuci\xf3n] --\x3e B[Se crea contexto global]\n    B --\x3e C[Se ejecutan funciones globales]\n    C --\x3e D{\xbfFunci\xf3n invocada?}\n    D -- S\xed --\x3e E[Se crea contexto de funci\xf3n]\n    E --\x3e F[Se empuja a la pila]\n    F --\x3e G[Variables y argumentos disponibles]\n    G --\x3e H[\xbfVariable requerida?]\n    H -- S\xed --\x3e I{\xbfEn scope actual?}\n    I -- S\xed --\x3e J[Se usa variable]\n    I -- No --\x3e K[Se busca en scope padre]\n    K --\x3e L[Hasta scope global o error]"}),"\n",(0,i.jsx)(n.h2,{id:"principios-recomendados",children:"Principios recomendados"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Principio"}),(0,i.jsx)(n.th,{children:"Aplicaci\xf3n"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Clean Code"}),(0,i.jsx)(n.td,{children:"Comprensi\xf3n clara de alcance evita errores l\xf3gicos"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"SRP (S - SOLID)"}),(0,i.jsx)(n.td,{children:"Separar funciones con scopes definidos y peque\xf1os"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"OCP"}),(0,i.jsx)(n.td,{children:"Facilita extender funciones sin alterar variables compartidas"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Clean Architecture"}),(0,i.jsx)(n.td,{children:"Scope ayuda a mantener separaci\xf3n entre capas y responsabilidades"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"referencias",children:"Referencias"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Flanagan, D. (2020). JavaScript: The Definitive Guide (7th ed.). O\u2019Reilly Media."}),"\n",(0,i.jsxs)(n.li,{children:["Mozilla Developer Network. (s.f.). ",(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures",children:"Scope and Closures"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Crockford, D. (2008). JavaScript: The Good Parts. O\u2019Reilly Media."}),"\n",(0,i.jsx)(n.li,{children:"Zakas, N. C. (2012). Maintainable JavaScript. O\u2019Reilly Media."}),"\n",(0,i.jsxs)(n.li,{children:["Google. (s.f.). ",(0,i.jsx)(n.a,{href:"https://google.github.io/styleguide/jsguide.html",children:"JavaScript Style Guide"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>l});var c=s(6540);const i={},o=c.createContext(i);function d(e){const n=c.useContext(o);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),c.createElement(o.Provider,{value:n},e.children)}}}]);