"use strict";(self.webpackChunkjs_and_ts_in_depth_elective=self.webpackChunkjs_and_ts_in_depth_elective||[]).push([[629],{8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var r=s(6540);const a={},i=r.createContext(a);function t(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(i.Provider,{value:n},e.children)}},8740:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"typescript_fundamentals/typing_arrays_tuples_and_objects","title":"Tipado de arreglos, tuplas y objetos","description":"- Arreglos (T[], Array): colecciones homog\xe9neas, tama\xf1o variable, API funcional (map, filter, reduce).","source":"@site/docs/02_typescript_fundamentals/04_typing_arrays_tuples_and_objects.md","sourceDirName":"02_typescript_fundamentals","slug":"/typescript_fundamentals/typing_arrays_tuples_and_objects","permalink":"/JS_and_TS_In-depth_Elective/docs/typescript_fundamentals/typing_arrays_tuples_and_objects","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02_typescript_fundamentals/04_typing_arrays_tuples_and_objects.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Tipado en funciones y par\xe1metros opcionales","permalink":"/JS_and_TS_In-depth_Elective/docs/typescript_fundamentals/function_typing_and_optional_parameters"},"next":{"title":"Diferencias entre type e interface","permalink":"/JS_and_TS_In-depth_Elective/docs/typescript_fundamentals/differences_between_type_and_interface"}}');var a=s(4848),i=s(8453);const t={sidebar_position:4},o="Tipado de arreglos, tuplas y objetos",l={},c=[{value:"Arreglos",id:"arreglos",level:2},{value:"Tuplas",id:"tuplas",level:2},{value:"Objetos",id:"objetos",level:2},{value:"Ejemplo t\xe9cnico",id:"ejemplo-t\xe9cnico",level:2},{value:"Patrones \xfatiles con arrays/tuplas/objetos",id:"patrones-\xfatiles-con-arraystuplasobjetos",level:2},{value:"Diagrama de clases: Entidad con array y objeto anidado",id:"diagrama-de-clases-entidad-con-array-y-objeto-anidado",level:2},{value:"\xbfCu\xe1ndo usar arreglo, tupla u objeto?",id:"cu\xe1ndo-usar-arreglo-tupla-u-objeto",level:2},{value:"Principios aplicables",id:"principios-aplicables",level:2},{value:"Referencias",id:"referencias",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"tipado-de-arreglos-tuplas-y-objetos",children:"Tipado de arreglos, tuplas y objetos"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsxs)(n.strong,{children:["Arreglos (",(0,a.jsx)(n.code,{children:"T[]"}),", ",(0,a.jsx)(n.code,{children:"Array<T>"}),")"]}),": colecciones homog\xe9neas, tama\xf1o variable, API funcional (map, filter, reduce)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsxs)(n.strong,{children:["Tuplas (",(0,a.jsx)(n.code,{children:"[T1, T2, ...]"}),")"]}),": tama\xf1o y posiciones fijos (o parcialmente fijos), cada \xedndice tiene tipo espec\xedfico; soportan opcionalidad y rest."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsxs)(n.strong,{children:["Objetos (",(0,a.jsx)(n.code,{children:"{ ... }"}),", ",(0,a.jsx)(n.code,{children:"interface"}),"):"]})," estructuras con propiedades nombradas; base de contratos (DTOs, entidades, puertos)."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Regla pr\xe1ctica:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Arreglo = \u201clista de cosas del mismo tipo\u201d."}),"\n",(0,a.jsx)(n.li,{children:"Tupla = \u201cn posiciones con significado/sem\xe1ntica por \xedndice\u201d."}),"\n",(0,a.jsx)(n.li,{children:"Objeto = \u201ccampos nombrados con contrato expl\xedcito\u201d."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"arreglos",children:"Arreglos"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Declaraci\xf3n y lectura"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"// Dos notaciones equivalentes:\nconst numsA: number[] = [1, 2, 3];\nconst numsB: Array<number> = [1, 2, 3];\n\n// La API funcional preserva los tipos\nconst doubled = numsA.map(n => n * 2);          // number[]\nconst evens = numsA.filter(n => n % 2 === 0);   // number[]\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Arreglos de uniones y diccionarios"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"const mix: Array<string | number> = ['A', 1, 'B', 2]; // (string | number)[]\n\ntype UserId = string;\ntype User = { id: UserId; name: string };\n\nconst byId: Record<UserId, User> = {\n  'u1': { id: 'u1', name: 'Ana' },\n  'u2': { id: 'u2', name: 'Luis' },\n};\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"readonly"})," y la inmutabilidad superficial"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"const brands: readonly string[] = ['Apple', 'Samsung'];\n// brands.push('Sony'); // Error: m\xe9todo mutante bloqueado\n\n// Congelar literales y preservar tipos exactos\nconst rgb = [255, 128, 64] as const; // readonly [255, 128, 64]\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Tip: ",(0,a.jsx)(n.code,{children:"readonly T[]"})," inhabilita m\xe9todos mutantes (p. ej., ",(0,a.jsx)(n.code,{children:"push"}),"). Para inmutabilidad profunda, use utilitarios (p. ej., ",(0,a.jsx)(n.code,{children:"Readonly<T>"})," en objetos, o librer\xedas)."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"tuplas",children:"Tuplas"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Tupla b\xe1sica y sem\xe1ntica por posici\xf3n"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"type GeoPoint = [lat: number, lon: number]; // named elements (TS 4.0+)\nconst bogota: GeoPoint = [4.711, -74.072];\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Elementos opcionales y ",(0,a.jsx)(n.code,{children:"rest"})," en tuplas"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"// Elementos opcionales de la tupla\ntype HttpLog = [status: number, path: string, ms?: number];\n\nconst a: HttpLog = [200, '/health'];\nconst b: HttpLog = [200, '/users', 12];\n\n// Rest element al final\ntype CsvRow = [id: string, ...values: (number | string)[]];\nconst row: CsvRow = ['r1', 10, 'ok', 22];\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Tupla vs arreglo"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Tupla:"})," longitud conocida / posiciones con significado (p. ej., ",(0,a.jsx)(n.code,{children:"[status, payload]"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Arreglo:"})," longitud din\xe1mica / elementos homog\xe9neos (p. ej., ",(0,a.jsx)(n.code,{children:"Order[]"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"objetos",children:"Objetos"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Interfaces y aliases (contratos expl\xedcitos)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"export interface Address {\n  street: string;\n  city: string;\n  country: string;\n  postalCode?: string; // optional\n}\n\nexport interface Customer {\n  readonly id: string;     // no puede ser reasignado\n  name: string;\n  email: string;\n  address?: Address;       // propiedad opcional\n}\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Utilitarios de tipos (mapeados)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"type CustomerDTO   = Readonly<Customer>;       // all props readonly (shallow)\ntype CustomerInput = Omit<Customer, 'id'>;     // remover 'id' cuando se crea\ntype PartialAddress = Partial<Address>;        // todos son opcionales\ntype StrictPick = Pick<Customer, 'id' | 'email'>;\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Index signatures vs ",(0,a.jsx)(n.code,{children:"Record"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"// Index signature: flexible pero menos estricto per-key\ninterface Env {\n  [key: string]: string | undefined;\n}\n\nconst env: Env = { NODE_ENV: 'production', DEBUG: undefined };\n\n// Record: dominio estricto de las llaves conocidas\ntype FeatureFlags = 'audit' | 'beta' | 'darkMode';\ntype Flags = Record<FeatureFlags, boolean>;\n\nconst flags: Flags = { audit: true, beta: false, darkMode: true };\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'Exactitud y "excess property checks"'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"interface User {\n  id: string;\n  name: string;\n}\n\nconst okUser: User = { id: 'u1', name: 'Ana' };\n\n// La comprobaci\xf3n de propiedad excesiva se activa en literales:\nconst badUser: User = { id: 'u2', name: 'Luis', role: 'admin' as any }; // Incorrecto\n"})}),"\n",(0,a.jsx)(n.p,{children:"Cuando asignas literales a tipos de objeto, TS detecta propiedades extra inesperadas. \xdatil para atrapar errores temprano."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"ejemplo-t\xe9cnico",children:"Ejemplo t\xe9cnico"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:'title="domain/entities/Order.ts" showLineNumbers',children:"export interface LineItem {\n  sku: string;\n  qty: number;\n  unitPrice: number;\n}\n\nexport interface Order {\n  id: string;\n  customerId: string;\n  items: ReadonlyArray<LineItem>; // immutable API surface\n  status: 'PENDING' | 'PAID' | 'CANCELLED';\n  createdAt: Date;\n  updatedAt: Date;\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:'title="application/usecases/CalculateTotal.ts" showLineNumbers',children:"export function calculateTotal(items: ReadonlyArray<LineItem>): number {\n  return items.reduce((sum, it) => sum + it.qty * it.unitPrice, 0);\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:'title="infrastructure/repositories/InMemoryOrderRepo.ts"',children:"export class InMemoryOrderRepo {\n  private store = new Map<string, Order>(); // inferred Map<string, Order>\n\n  save(order: Order): void {\n    this.store.set(order.id, order);\n  }\n\n  findById(id: string): Order | null {\n    return this.store.get(id) ?? null;\n  }\n}\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Arreglos:"})," ",(0,a.jsx)(n.code,{children:"ReadonlyArray<LineItem>"})," en la superficie p\xfablica para prevenir mutaciones accidentales (DIP/SRP)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Objetos:"})," contratos expl\xedcitos entre capas."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Tuplas:"})," \xfatiles para logs/eventos o resultados compactos (",(0,a.jsx)(n.code,{children:"[status, payload]"}),"), sin sobredise\xf1ar DTOs."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"patrones-\xfatiles-con-arraystuplasobjetos",children:"Patrones \xfatiles con arrays/tuplas/objetos"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Resultado tipado con tupla (status + payload)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"// Representa un resultado exitoso con un valor de tipo T\ntype Success<T> = [status: 'ok', value: T];\n\n// Representa un resultado fallido con un error de tipo E\ntype Failure<E> = [status: 'error', error: E];\n\n// Uni\xf3n de ambos posibles resultados\ntype Result<T, E = Error> = Success<T> | Failure<E>;\n\n// Funci\xf3n para construir un resultado exitoso\nexport const createSuccess = <T>(value: T): Success<T> => ['ok', value];\n\n// Funci\xf3n para construir un resultado fallido\nexport const createFailure = <E>(error: E): Failure<E> => ['error', error];\n\n// Extrae el valor de un resultado exitoso o lanza el error si es fallido\nfunction unwrapResult<T, E>(result: Result<T, E>): T {\n  const [status, payload] = result;\n\n  if (status === 'ok') {\n    return payload as T;\n  }\n\n  throw payload;\n}\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Normalizaci\xf3n inmutable con objetos"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"export function normalizeUsers(users: ReadonlyArray<{ id: string; name: string }>) {\n  const byId: Record<string, { id: string; name: string }> = {};\n  for (const u of users) byId[u.id] = u;\n  const allIds = users.map(u => u.id) as readonly string[];\n  return { byId, allIds } as const; // preserva exactitud\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"diagrama-de-clases-entidad-con-array-y-objeto-anidado",children:"Diagrama de clases: Entidad con array y objeto anidado"}),"\n",(0,a.jsx)(n.mermaid,{value:'classDiagram\n  class LineItem {\n    +sku: string\n    +qty: number\n    +unitPrice: number\n  }\n\n  class Order {\n    +id: string\n    +customerId: string\n    +items: ReadonlyArray<LineItem>\n    +status: "PENDING"|"PAID"|"CANCELLED"\n    +createdAt: Date\n    +updatedAt: Date\n  }\n\n  Order "1" --\x3e "many" LineItem'}),"\n",(0,a.jsx)(n.h2,{id:"cu\xe1ndo-usar-arreglo-tupla-u-objeto",children:"\xbfCu\xe1ndo usar arreglo, tupla u objeto?"}),"\n",(0,a.jsx)(n.mermaid,{value:'flowchart TD\n  A["\xbfEstructura homog\xe9nea de elementos?"] --\x3e|S\xed| B["Usa Array<T> / T[]"]\n  A --\x3e|No| C["\xbfPosiciones con significado fijo?"]\n  C --\x3e|S\xed| D["Usa Tuple [T1, T2, ...]"]\n  C --\x3e|No| E["Usa Object/Interface { ... }"]\n  B --\x3e F["\xbfAPI p\xfablica? Considera ReadonlyArray"]\n  D --\x3e G["Considera optional/rest en tuplas"]\n  E --\x3e H["Define contrato con interface/type"]'}),"\n",(0,a.jsx)(n.h2,{id:"principios-aplicables",children:"Principios aplicables"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Clean Code:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"ReadonlyArray"})," en APIs para evitar efectos colaterales."]}),"\n",(0,a.jsx)(n.li,{children:"Tipos precisos (tuplas vs arrays) comunican intenci\xf3n."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"SRP (S) / OCP (O):"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Contratos expl\xedcitos (interfaces) facilitan extensiones sin romper consumidores."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"DIP (D):"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Dependencias contra ",(0,a.jsx)(n.strong,{children:"interfaces"})," (entidades/repositorios), no implementaciones concretas."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Clean Architecture:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Dominio con entidades inmutables y arreglos readonly en la superficie p\xfablica."}),"\n",(0,a.jsx)(n.li,{children:"Aplicaci\xf3n orquesta; Infraestructura traduce a persistencia/HTTP."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"referencias",children:"Referencias"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Microsoft. (s.f.). ",(0,a.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/",children:"TypeScript Handbook: Interfaces, Arrays, Tuples, Utility Types"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Flanagan, D. (2020). JavaScript: The Definitive Guide (7.\xaa ed.). O\u2019Reilly Media."}),"\n",(0,a.jsxs)(n.li,{children:["Mozilla Developer Network. (s.f.). ",(0,a.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript",children:"Indexed collections and keyed collections"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Zakas, N. C. (2012). Maintainable JavaScript: Writing Readable Code. O\u2019Reilly Media."}),"\n",(0,a.jsx)(n.li,{children:"Freeman, E., & Robson, E. (2014). Head First JavaScript Programming. O\u2019Reilly Media."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);