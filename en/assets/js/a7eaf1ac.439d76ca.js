"use strict";(self.webpackChunkjs_and_ts_in_depth_elective=self.webpackChunkjs_and_ts_in_depth_elective||[]).push([[4054],{3402:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>t});const o=JSON.parse('{"id":"advanced_concepts/promise_chaining","title":"Encadenamiento de Promises","description":"El encadenamiento de Promises consiste en conectar varias operaciones asincr\xf3nicas de manera secuencial usando el m\xe9todo .then(). Cada .then() recibe el resultado de la Promise anterior y devuelve un nuevo valor o una nueva Promise.","source":"@site/docs/03_advanced_concepts/03_promise_chaining.md","sourceDirName":"03_advanced_concepts","slug":"/advanced_concepts/promise_chaining","permalink":"/JS_and_TS_In-depth_Elective/en/docs/advanced_concepts/promise_chaining","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03_advanced_concepts/03_promise_chaining.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Callbacks vs Promises","permalink":"/JS_and_TS_In-depth_Elective/en/docs/advanced_concepts/callbacks_vs_promises"},"next":{"title":"async/await y control de errores","permalink":"/JS_and_TS_In-depth_Elective/en/docs/advanced_concepts/asyncawait_and_error_handling"}}');var a=r(4848),i=r(8453);const s={sidebar_position:3},c="Encadenamiento de Promises",l={},t=[{value:"Ejemplo t\xe9cnico",id:"ejemplo-t\xe9cnico",level:2},{value:"Diagrama de secuencias",id:"diagrama-de-secuencias",level:2},{value:"Valores de retorno en <code>.then()</code>",id:"valores-de-retorno-en-then",level:2},{value:"Encadenamiento de errores",id:"encadenamiento-de-errores",level:2},{value:"Buenas pr\xe1cticas en Promise chaining",id:"buenas-pr\xe1cticas-en-promise-chaining",level:2},{value:"Relaci\xf3n con el Event Loop",id:"relaci\xf3n-con-el-event-loop",level:2},{value:"Propagaci\xf3n de errores en Promises chaining",id:"propagaci\xf3n-de-errores-en-promises-chaining",level:2},{value:"Referencias",id:"referencias",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"encadenamiento-de-promises",children:"Encadenamiento de Promises"})}),"\n",(0,a.jsxs)(n.p,{children:["El ",(0,a.jsx)(n.strong,{children:"encadenamiento de Promises"})," consiste en conectar varias operaciones asincr\xf3nicas de manera secuencial usando el m\xe9todo ",(0,a.jsx)(n.code,{children:".then()"}),". Cada ",(0,a.jsx)(n.code,{children:".then()"})," recibe el resultado de la Promise anterior y devuelve un nuevo valor o una nueva Promise."]}),"\n",(0,a.jsxs)(n.p,{children:["Permite estructurar el flujo de forma lineal, evitando el ",(0,a.jsx)(n.strong,{children:"callback hell"})," y manejando los errores centralizadamente."]}),"\n",(0,a.jsx)(n.h2,{id:"ejemplo-t\xe9cnico",children:"Ejemplo t\xe9cnico"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'loginUser("user@example.com")\n  .then((user) => loadProfile(user.id))\n  .then((profile) => getNotifications(profile.id))\n  .then((notifications) => {\n    console.log("Notificaciones:", notifications);\n  })\n  .catch((error) => {\n    console.error("Error en la cadena:", error);\n  });\n'})}),"\n",(0,a.jsx)(n.p,{children:"\xbfQu\xe9 est\xe1 ocurriendo en cada paso?"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"loginUser()"})," devuelve una Promise."]}),"\n",(0,a.jsxs)(n.li,{children:["El primer ",(0,a.jsx)(n.code,{children:".then()"})," recibe el user y retorna la Promise de ",(0,a.jsx)(n.code,{children:"loadProfile()"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["El segundo ",(0,a.jsx)(n.code,{children:".then()"})," recibe el profile y retorna la Promise de ",(0,a.jsx)(n.code,{children:"getNotifications()"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Finalmente, el tercer ",(0,a.jsx)(n.code,{children:".then()"})," procesa las notificaciones."]}),"\n",(0,a.jsxs)(n.li,{children:["Cualquier error en la cadena es capturado en el ",(0,a.jsx)(n.code,{children:".catch()"})," final."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"diagrama-de-secuencias",children:"Diagrama de secuencias"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    autonumber\n    participant CS as Call Stack\n    participant API as Web/Node APIs\n    participant Micro as Microtask Queue (Promises)\n    participant EL as Event Loop\n\n    Note over CS: Inicia loginUser()\n    CS->>API: loginUser -> API\n    API->>Micro: Resuelve loginUser() -> user\n\n    EL->>Micro: Toma microtarea .then(loadProfile)\n    Micro--\x3e>CS: Ejecuta loadProfile(user)\n    CS->>API: loadProfile -> API\n    API->>Micro: Resuelve loadProfile() -> profile\n\n    EL->>Micro: Toma microtarea .then(getNotifications)\n    Micro--\x3e>CS: Ejecuta getNotifications(profile)\n    CS->>API: getNotifications -> API\n    API->>Micro: Resuelve getNotifications() -> notifications\n\n    EL->>Micro: Toma microtarea final .then(console.log)\n    Micro--\x3e>CS: Ejecuta callback final"}),"\n",(0,a.jsxs)(n.h2,{id:"valores-de-retorno-en-then",children:["Valores de retorno en ",(0,a.jsx)(n.code,{children:".then()"})]}),"\n",(0,a.jsxs)(n.p,{children:["Un ",(0,a.jsx)(n.code,{children:".then()"})," puede devolver:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Un valor normal:"}),"\n",(0,a.jsxs)(n.p,{children:["Se pasa directamente al siguiente ",(0,a.jsx)(n.code,{children:".then()"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"Promise.resolve(2)\n  .then((num) => num * 2) // devuelve 4\n  .then((result) => console.log(result)); // 4\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Otra Promise:"}),"\n",(0,a.jsxs)(n.p,{children:["El siguiente ",(0,a.jsx)(n.code,{children:".then()"})," esperar\xe1 a que esta Promise se resuelva:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"Promise.resolve(2)\n  .then((num) => Promise.resolve(num * 2))\n  .then((result) => console.log(result)); // 4\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Nada:"}),"\n",(0,a.jsxs)(n.p,{children:["Si no devuelves nada, el siguiente ",(0,a.jsx)(n.code,{children:".then()"})," recibir\xe1 ",(0,a.jsx)(n.code,{children:"undefined"}),"."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"encadenamiento-de-errores",children:"Encadenamiento de errores"}),"\n",(0,a.jsxs)(n.p,{children:["Si ocurre un error en cualquier Promise de la cadena, se salta al primer ",(0,a.jsx)(n.code,{children:".catch()"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'loginUser("<user@example.com>")\n  .then((user) => loadProfile(user.id))\n  .then(() => {\n    throw new Error("Error forzado");\n  })\n  .then(() => console.log("Esto no se ejecuta"))\n  .catch((err) => console.error("Capturado:", err));\n'})}),"\n",(0,a.jsx)(n.p,{children:"Una vez capturado el error, puedes continuar la cadena devolviendo un valor o lanzando otro error."}),"\n",(0,a.jsx)(n.p,{children:"Por ejemplo, miremos un ejemplo con un flujo de compra:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'processPayment(order)\n  .then((paymentResult) => createInvoice(paymentResult))\n  .then((invoice) => sendEmail(invoice))\n  .then(() => console.log("Compra completada"))\n  .catch((err) => console.error("Error en la compra:", err));\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Cada paso depende del resultado del anterior. El ",(0,a.jsx)(n.code,{children:".catch()"})," centraliza el manejo de errores."]}),"\n",(0,a.jsx)(n.h2,{id:"buenas-pr\xe1cticas-en-promise-chaining",children:"Buenas pr\xe1cticas en Promise chaining"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Siempre devuelve algo en cada ",(0,a.jsx)(n.code,{children:".then()"}),": un valor o una Promise."]}),"\n",(0,a.jsxs)(n.li,{children:["Coloca el ",(0,a.jsx)(n.code,{children:".catch()"})," al final de la cadena para capturar cualquier error."]}),"\n",(0,a.jsxs)(n.li,{children:["No anides ",(0,a.jsx)(n.code,{children:".then()"})," dentro de otro ",(0,a.jsx)(n.code,{children:".then()"}),"; el objetivo es mantener el flujo plano."]}),"\n",(0,a.jsxs)(n.li,{children:["Usa ",(0,a.jsx)(n.code,{children:"finally()"})," si necesitas ejecutar l\xf3gica independientemente del resultado:"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Por ejemplo:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'doTask()\n  .then(handleSuccess)\n  .catch(handleError)\n  .finally(() => console.log("Siempre se ejecuta"));\n'})}),"\n",(0,a.jsx)(n.h2,{id:"relaci\xf3n-con-el-event-loop",children:"Relaci\xf3n con el Event Loop"}),"\n",(0,a.jsxs)(n.p,{children:["Cada ",(0,a.jsx)(n.code,{children:".then()"})," se encola en la Microtask Queue cuando la Promise se resuelve. Se ejecutan antes de cualquier macrotarea (por ejemplo, ",(0,a.jsx)(n.code,{children:"setTimeout"}),")."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'setTimeout(() => console.log("Macrotarea"), 0);\n\nPromise.resolve().then(() => console.log("Microtarea 1"));\nPromise.resolve().then(() => console.log("Microtarea 2"));\n\nconsole.log("S\xedncrono");\n'})}),"\n",(0,a.jsx)(n.p,{children:"Salida:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"S\xedncrono\nMicrotarea 1\nMicrotarea 2\nMacrotarea\n"})}),"\n",(0,a.jsx)(n.h2,{id:"propagaci\xf3n-de-errores-en-promises-chaining",children:"Propagaci\xf3n de errores en Promises chaining"}),"\n",(0,a.jsx)(n.mermaid,{value:'flowchart TD\n    A(["Inicio"]) --\x3e B["Ejecutar Promise inicial"]\n    B --\x3e C{"\xbfPromise resuelta?"}\n    C -- S\xed --\x3e D["Ejecutar primer .then()"]\n    C -- No --\x3e H["Salta al .catch() m\xe1s cercano"]\n\n    D --\x3e E{"\xbfthrow Error o reject()?"}\n    E -- No --\x3e F["Retornar valor o nueva Promise"]\n    F --\x3e G{"\xbfHay otro .then()?"}\n    G -- S\xed --\x3e D\n    G -- No --\x3e J(["Fin"])\n\n    E -- S\xed --\x3e H\n    H --\x3e I{"\xbfHay otro .catch()?"}\n    I -- S\xed --\x3e K["Ejecutar .catch()"]\n    I -- No --\x3e L["Error no manejado"]\n    K --\x3e M{"\xbfthrow Error en .catch()?"}\n    M -- S\xed --\x3e I\n    M -- No --\x3e N{"\xbfHay finally()?"}\n    N -- S\xed --\x3e O["Ejecutar finally()"]\n    N -- No --\x3e J(["Fin"])\n    O --\x3e J'}),"\n",(0,a.jsx)(n.p,{children:"Apliquemos el flujo en un ejemplo:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'Promise.resolve("Inicio")\n  .then((data) => {\n    console.log(data);\n    throw new Error("Error en el primer then");\n  })\n  .then(() => {\n    console.log("Esto no se ejecuta");\n  })\n  .catch((error) => {\n    console.error("Error capturado:", error.message);\n    return "Valor de recuperaci\xf3n";\n  })\n  .then((data) => {\n    console.log("Se recupera el flujo con:", data);\n  })\n  .finally(() => {\n    console.log("Siempre se ejecuta el finally");\n  });\n'})}),"\n",(0,a.jsx)(n.p,{children:"La salida esperada ser\xe1:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Inicio\nError capturado: Error en el primer then\nSe recupera el flujo con: Valor de recuperaci\xf3n\nSiempre se ejecuta el finally\n"})}),"\n",(0,a.jsx)(n.h2,{id:"referencias",children:"Referencias"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Flanagan, D. (2020). JavaScript: The Definitive Guide (7th ed.). O\u2019Reilly Media."}),"\n",(0,a.jsxs)(n.li,{children:["Mozilla Developer Network. (s.f.). ",(0,a.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises",children:"Using Promises"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Mozilla Developer Network. (s.f.). ",(0,a.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch",children:"Promise.prototype.catch()"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["TypeScript Handbook. (s.f.). ",(0,a.jsx)(n.a,{href:"https://www.typescriptlang.org/docs",children:"Promises"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Google. (s.f.). ",(0,a.jsx)(n.a,{href:"https://google.github.io/styleguide/jsguide.html",children:"JavaScript Style Guide"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var o=r(6540);const a={},i=o.createContext(a);function s(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);