"use strict";(self.webpackChunkjs_and_ts_in_depth_elective=self.webpackChunkjs_and_ts_in_depth_elective||[]).push([[6171],{8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}},8768:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"typescript_fundamentals/function_typing_and_optional_parameters","title":"Tipado en funciones y par\xe1metros opcionales","description":"El contrato de una funci\xf3n (sus par\xe1metros y su tipo de retorno) es una frontera de arquitectura. Tipar bien estas fronteras:","source":"@site/docs/02_typescript_fundamentals/03_function_typing_and_optional_parameters.md","sourceDirName":"02_typescript_fundamentals","slug":"/typescript_fundamentals/function_typing_and_optional_parameters","permalink":"/JS_and_TS_In-depth_Elective/en/docs/typescript_fundamentals/function_typing_and_optional_parameters","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02_typescript_fundamentals/03_function_typing_and_optional_parameters.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Inferencia de tipos vs anotaci\xf3n expl\xedcita","permalink":"/JS_and_TS_In-depth_Elective/en/docs/typescript_fundamentals/type_inference_vs_explicit_annotation"},"next":{"title":"Tipado de arreglos, tuplas y objetos","permalink":"/JS_and_TS_In-depth_Elective/en/docs/typescript_fundamentals/typing_arrays_tuples_and_objects"}}');var s=t(4848),i=t(8453);const a={sidebar_position:3},o="Tipado en funciones y par\xe1metros opcionales",l={},d=[{value:"Firmas de funciones",id:"firmas-de-funciones",level:2},{value:"Par\xe1metros opcionales",id:"par\xe1metros-opcionales",level:2},{value:"Ejemplo t\xe9cnico",id:"ejemplo-t\xe9cnico",level:2},{value:"Opci\xf3n omitida vs provista",id:"opci\xf3n-omitida-vs-provista",level:2},{value:"Referencias",id:"referencias",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"tipado-en-funciones-y-par\xe1metros-opcionales",children:"Tipado en funciones y par\xe1metros opcionales"})}),"\n",(0,s.jsxs)(n.p,{children:["El contrato de una funci\xf3n (sus par\xe1metros y su tipo de retorno) es una ",(0,s.jsx)(n.strong,{children:"frontera de arquitectura"}),". Tipar bien estas fronteras:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Evita ambig\xfcedad y errores de integraci\xf3n."}),"\n",(0,s.jsx)(n.li,{children:"Documenta la intenci\xf3n del dise\xf1o."}),"\n",(0,s.jsx)(n.li,{children:"Mejora la refactorizaci\xf3n segura y la testabilidad."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Regla pr\xe1ctica: ",(0,s.jsx)(n.strong,{children:"anota expl\xedcitamente en las fronteras p\xfablicas"})," (exports, controladores, use cases) y ",(0,s.jsx)(n.strong,{children:"aprovecha la inferencia dentro de las implementaciones"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"firmas-de-funciones",children:"Firmas de funciones"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Declaraci\xf3n y expresi\xf3n de funci\xf3n:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'// Declaration\nexport function toSlug(input: string): string {\n  return input.trim().toLowerCase().replace(/\\s+/g, "-");\n}\n\n// Function type + arrow\nexport const normalize: (s: string) => string = (s) =>\n  s.normalize("NFKC").trim();\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Par\xe1metros nombrados vs objeto de opciones: Los par\xe1metros nombrados son dimples, directos, e ideales para entre 1 a 3 argumentos. Por otro lado, los objeto de opciones son escalables, permiten opciones opcionales y valores por defecto claros."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"// Options object with optional properties\nexport interface PaginationOptions {\n  page?: number;           // optional\n  pageSize?: number;       // optional\n  includeTotal?: boolean;  // optional\n}\n\nexport function paginate<T>(\n  data: T[],\n  { page = 1, pageSize = 10, includeTotal = false }: PaginationOptions = {}\n): { items: T[]; total?: number } {\n  const start = (page - 1) * pageSize;\n  const items = data.slice(start, start + pageSize);\n  return includeTotal ? { items, total: data.length } : { items };\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Con destructuring y defaults, los opcionales quedan resueltos sin ",(0,s.jsx)(n.code,{children:"if"})," verbosos."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"par\xe1metros-opcionales",children:"Par\xe1metros opcionales"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Par\xe1metro opcional con ",(0,s.jsx)(n.code,{children:"?"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"export function greet(name: string, title?: string): string {\n  return title ? `Hello, ${title} ${name}` : `Hello, ${name}`;\n}\n// `title` tiene tipo: string | undefined\n"})}),"\n",(0,s.jsx)(n.p,{children:"Los opcionales deben ir al final de la lista de par\xe1metros."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Par\xe1metro con valor por defecto"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'export function connect(url: string, timeoutMs: number = 5000): string {\n    return `Connecting to ${url} with timeout=${timeoutMs}ms`;\n}\n// timeoutMs es "opcionales a la llamada"; dentro de la funci\xf3n se trata como number\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Si el llamador omite el argumento o pasa ",(0,s.jsx)(n.code,{children:"undefined"}),", se aplica el default."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Uni\xf3n expl\xedcita con ",(0,s.jsx)(n.code,{children:"undefined"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'export function parsePort(input: string | undefined): number {\n  const raw = input ?? "8080";\n  const port = Number(raw);\n  if (!Number.isFinite(port)) throw new Error("Invalid port");\n  return port;\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"\xbfCu\xe1les son las diferencias entre los 3?"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Forma"}),(0,s.jsx)(n.th,{children:"Tipo dentro de la funci\xf3n"}),(0,s.jsx)(n.th,{children:"\xbfSe puede omitir al llamar?"}),(0,s.jsx)(n.th,{children:"\xbfDefault autom\xe1tico?"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"param?: T"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"T | undefined"})}),(0,s.jsx)(n.td,{children:"S\xed"}),(0,s.jsx)(n.td,{children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"param = default"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"T"})}),(0,s.jsx)(n.td,{children:"S\xed"}),(0,s.jsxs)(n.td,{children:["S\xed (si omitido o ",(0,s.jsx)(n.code,{children:"undefined"}),")"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"param: T | undefined"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"T | undefined"})}),(0,s.jsxs)(n.td,{children:["S\xed (porque ",(0,s.jsx)(n.code,{children:"undefined"})," v\xe1lido)"]}),(0,s.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"ejemplo-t\xe9cnico",children:"Ejemplo t\xe9cnico"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="domain/entities/Order.ts" showLineNumbers',children:'export interface Order {\n  id: string;\n  customerId: string;\n  total: number;\n  status: "PENDING" | "PAID" | "CANCELLED";\n  createdAt: Date;\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="domain/ports/OrderRepository.ts" showLineNumbers',children:'export interface OrderRepository {\n  findByFilter(filter: OrderFilter): Promise<Order[]>;\n}\n\nexport interface OrderFilter {\n  customerId?: string;\n  status?: Order["status"];\n  minTotal?: number;\n  maxTotal?: number;\n  from?: Date;\n  to?: Date;\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="application/usecases/SearchOrders.ts" showLineNumbers',children:"export class SearchOrders {\n  constructor(private readonly repo: OrderRepository) {}\n\n  // Public edge: explicit types + options object with optionals\n  async execute(filter: OrderFilter = {}): Promise<Order[]> {\n    const normalized: OrderFilter = {\n      ...filter,\n      minTotal: filter.minTotal ?? 0,\n      maxTotal: filter.maxTotal ?? Number.POSITIVE_INFINITY,\n    };\n    return this.repo.findByFilter(normalized);\n  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Claves de Clean Architecture aplicadas:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dominio/puertos:"})," contratos expl\xedcitos con propiedades opcionales."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use case:"})," defaults internos con ?? para asegurar invariantes; evita null."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Infraestructura:"})," interpreta los opcionales (query params, \xedndices, rangos)."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"opci\xf3n-omitida-vs-provista",children:"Opci\xf3n omitida vs provista"}),"\n",(0,s.jsx)(n.mermaid,{value:'sequenceDiagram\n  autonumber\n  participant Caller\n  participant UseCase as SearchOrders.execute\n  participant Repo as OrderRepository\n\n  Caller->>UseCase: execute() // no filter\n  UseCase->>UseCase: default {} + apply defaults\n  UseCase->>Repo: findByFilter(normalized)\n  Repo--\x3e>UseCase: Order[]\n  UseCase--\x3e>Caller: Order[]\n\n  Caller->>UseCase: execute({ status: "PAID", minTotal: 100 })\n  UseCase->>UseCase: merge + normalize\n  UseCase->>Repo: findByFilter({status:"PAID", minTotal:100,...})\n  Repo--\x3e>UseCase: Order[]\n  UseCase--\x3e>Caller: Order[]'}),"\n",(0,s.jsx)(n.h2,{id:"referencias",children:"Referencias"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Microsoft. (s.f.). ",(0,s.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/",children:"TypeScript Handbook: Functions, Optional Parameters, Default Parameters, Function Types"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Flanagan, D. (2020). JavaScript: The Definitive Guide (7.\xaa ed.). O\u2019Reilly Media."}),"\n",(0,s.jsx)(n.li,{children:"Zakas, N. C. (2012). Maintainable JavaScript: Writing Readable Code. O\u2019Reilly Media."}),"\n",(0,s.jsx)(n.li,{children:"Freeman, E., & Robson, E. (2014). Head First JavaScript Programming. O\u2019Reilly Media."}),"\n",(0,s.jsxs)(n.li,{children:["Google. (s.f.). ",(0,s.jsx)(n.a,{href:"https://google.github.io/styleguide/jsguide.html",children:"JavaScript Style Guide"}),"."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);