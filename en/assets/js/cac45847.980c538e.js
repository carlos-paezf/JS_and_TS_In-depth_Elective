"use strict";(self.webpackChunkjs_and_ts_in_depth_elective=self.webpackChunkjs_and_ts_in_depth_elective||[]).push([[5562],{7567:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"introduction_and_modern_fundamentals/spread_and_rest_operators","title":"Operador spread y rest","description":"En JavaScript y TypeScript, el operador ... se utiliza tanto para expandir elementos (spread) como para agrupar valores (rest). Su comportamiento depende del contexto:","source":"@site/docs/01_introduction_and_modern_fundamentals/07_spread_and_rest_operators.md","sourceDirName":"01_introduction_and_modern_fundamentals","slug":"/introduction_and_modern_fundamentals/spread_and_rest_operators","permalink":"/JS_and_TS_In-depth_Elective/en/docs/introduction_and_modern_fundamentals/spread_and_rest_operators","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/01_introduction_and_modern_fundamentals/07_spread_and_rest_operators.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Destructuring (arrays y objetos)","permalink":"/JS_and_TS_In-depth_Elective/en/docs/introduction_and_modern_fundamentals/destructuring_arrays_and_objects"},"next":{"title":"Template literals","permalink":"/JS_and_TS_In-depth_Elective/en/docs/introduction_and_modern_fundamentals/template_literals"}}');var a=r(4848),t=r(8453);const d={sidebar_position:7},i="Operador spread y rest",o={},c=[{value:"Spread Operator - Expansi\xf3n",id:"spread-operator---expansi\xf3n",level:2},{value:"Rest Operator - Agrupamiento",id:"rest-operator---agrupamiento",level:2},{value:"Comparaci\xf3n r\xe1pida",id:"comparaci\xf3n-r\xe1pida",level:2},{value:"Spread vs Rest en funci\xf3n",id:"spread-vs-rest-en-funci\xf3n",level:2},{value:"Buenas pr\xe1cticas aplicadas",id:"buenas-pr\xe1cticas-aplicadas",level:2},{value:"Referencias",id:"referencias",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"operador-spread-y-rest",children:"Operador spread y rest"})}),"\n",(0,a.jsxs)(n.p,{children:["En JavaScript y TypeScript, el operador ",(0,a.jsx)(n.code,{children:"..."})," se utiliza tanto para ",(0,a.jsx)(n.code,{children:"expandir elementos"})," (",(0,a.jsx)(n.strong,{children:"spread"}),") como para agrupar valores (",(0,a.jsx)(n.strong,{children:"rest"}),"). Su comportamiento depende del contexto:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Spread"}),": Expande una colecci\xf3n (array u objeto)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Rest"}),": Agrupa m\xfaltiples elementos en una colecci\xf3n."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["La clave est\xe1 en ",(0,a.jsx)(n.strong,{children:"d\xf3nde se usa"}),": en el ",(0,a.jsx)(n.strong,{children:"lado derecho"})," de una asignaci\xf3n es ",(0,a.jsx)(n.strong,{children:"spread"}),"; en el ",(0,a.jsx)(n.strong,{children:"lado izquierdo"})," (como en par\xe1metros o destructuring), es ",(0,a.jsx)(n.strong,{children:"rest"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"spread-operator---expansi\xf3n",children:"Spread Operator - Expansi\xf3n"}),"\n",(0,a.jsx)(n.p,{children:"En arreglos:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",metastring:"showLineNumbers",children:"const arr1 = [1, 2];\nconst arr2 = [3, 4];\nconst combined = [...arr1, ...arr2]; // [1, 2, 3, 4]\n"})}),"\n",(0,a.jsx)(n.p,{children:"En objetos:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",metastring:"showLineNumbers",children:"const user = { name: 'Alice', email: 'alice@mail.com' };\nconst updated = { ...user, active: true }; \n// { name: 'Alice', email: 'alice@mail.com', active: true }\n"})}),"\n",(0,a.jsx)(n.h2,{id:"rest-operator---agrupamiento",children:"Rest Operator - Agrupamiento"}),"\n",(0,a.jsx)(n.p,{children:"En par\xe1metros de funci\xf3n:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",metastring:"showLineNumbers",children:"function sum(...numbers: number[]) {\n  return numbers.reduce((a, b) => a + b, 0);\n}\n\nsum(1, 2, 3, 4); // 10\n"})}),"\n",(0,a.jsx)(n.p,{children:"En destructuring de arrays:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",metastring:"showLineNumbers",children:"const [first, ...rest] = [10, 20, 30, 40];\nconsole.log(first); // 10\nconsole.log(rest);  // [20, 30, 40]\n"})}),"\n",(0,a.jsx)(n.p,{children:"En destructuring de objetos:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",metastring:"showLineNumbers",children:"const { name, ...others } = {\n  name: 'Ana',\n  age: 28,\n  country: 'CO',\n};\n\nconsole.log(name);   // Ana\nconsole.log(others); // { age: 28, country: 'CO' }\n"})}),"\n",(0,a.jsx)(n.h2,{id:"comparaci\xf3n-r\xe1pida",children:"Comparaci\xf3n r\xe1pida"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Uso"}),(0,a.jsx)(n.th,{children:"Nombre"}),(0,a.jsx)(n.th,{children:"Ejemplo clave"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Expandir"}),(0,a.jsx)(n.td,{children:"Spread"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"const all = [...a, ...b]"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Agrupar"}),(0,a.jsx)(n.td,{children:"Rest"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"function(...args) {}"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"En objetos"}),(0,a.jsx)(n.td,{children:"Ambos"}),(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"{...obj}"})," o ",(0,a.jsx)(n.code,{children:"const {...rest} = obj"})]})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"spread-vs-rest-en-funci\xf3n",children:"Spread vs Rest en funci\xf3n"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",metastring:"showLineNumbers",children:"function sum(...args: number[]): number {\n  return args.reduce((a, b) => a + b, 0);\n}\n\nconst values = [1, 2, 3, 4];\nconst result = sum(...values); // \u2705 Usa spread aqu\xed\nconsole.log(result); // 10\n"})}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    autonumber\n    participant Main as C\xf3digo Principal\n    participant Expanded as Operador Spread\n    participant Func as Funci\xf3n sum(...args)\n    participant Grouped as Par\xe1metro Rest (...args)\n    participant Result as Resultado\n\n    Main->>Expanded: Definir valores\n    Expanded--\x3e>Func: Expande [1, 2, 3, 4] \u2192 1, 2, 3, 4\n\n    Func->>Grouped: Agrupa argumentos \u2192 [1, 2, 3, 4]\n    Grouped->>Func: Procesa con reduce\n    Func--\x3e>Result: Retorna 10"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"En el c\xf3digo principal se definen los valores del arreglo"}),"\n",(0,a.jsxs)(n.li,{children:["Luego, se expande el arreglo dentro de los argumentos de la funci\xf3n ",(0,a.jsx)(n.code,{children:"sum"})," usando el operador spread."]}),"\n",(0,a.jsxs)(n.li,{children:["Dentro de la definici\xf3n de la funci\xf3n ",(0,a.jsx)(n.code,{children:"sum"})," se agrupan los argumentos en un arreglo usando el operador rest."]}),"\n",(0,a.jsxs)(n.li,{children:["Se procesan los valores agrupados usando la funci\xf3n ",(0,a.jsx)(n.code,{children:"reduce"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Se retorna el valore de la operaci\xf3n."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"buenas-pr\xe1cticas-aplicadas",children:"Buenas pr\xe1cticas aplicadas"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Principio"}),(0,a.jsx)(n.th,{children:"Aplicaci\xf3n"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Clean Code"})}),(0,a.jsx)(n.td,{children:"C\xf3digo m\xe1s expresivo, menos mutaciones."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"SRP (SOLID)"})}),(0,a.jsxs)(n.td,{children:["Funciones como ",(0,a.jsx)(n.code,{children:"...args"})," mantienen su responsabilidad clara."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Open-Closed"})}),(0,a.jsx)(n.td,{children:"Permite extender objetos sin modificarlos directamente."})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"referencias",children:"Referencias"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Flanagan, D. (2020). JavaScript: The Definitive Guide (7th ed.). O'Reilly Media."}),"\n",(0,a.jsxs)(n.li,{children:["Mozilla Developer Network (MDN). (s.f.). ",(0,a.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax",children:"Spread syntax (...)"})]}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.typescriptlang.org/docs",children:"TypeScript Handbook"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://google.github.io/styleguide/jsguide.html",children:"JavaScript Style Guide."})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>i});var s=r(6540);const a={},t=s.createContext(a);function d(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);