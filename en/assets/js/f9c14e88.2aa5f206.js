"use strict";(self.webpackChunkjs_and_ts_in_depth_elective=self.webpackChunkjs_and_ts_in_depth_elective||[]).push([[9937],{8287:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"typescript_fundamentals/primitive_types_and_data_structures","title":"Tipos primitivos y estructuras","description":"TypeScript es un superset de JavaScript que introduce tipado est\xe1tico opcional, lo cual significa que puedes anotar el tipo de datos que una variable, par\xe1metro o funci\xf3n puede aceptar o devolver, y el compilador puede detectar errores antes de ejecutar el c\xf3digo.","source":"@site/docs/02_typescript_fundamentals/01_primitive_types_and_data_structures.md","sourceDirName":"02_typescript_fundamentals","slug":"/typescript_fundamentals/primitive_types_and_data_structures","permalink":"/JS_and_TS_In-depth_Elective/en/docs/typescript_fundamentals/primitive_types_and_data_structures","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02_typescript_fundamentals/01_primitive_types_and_data_structures.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Fundamentos de TypeScript","permalink":"/JS_and_TS_In-depth_Elective/en/docs/category/fundamentos-de-typescript"},"next":{"title":"Inferencia de tipos vs anotaci\xf3n expl\xedcita","permalink":"/JS_and_TS_In-depth_Elective/en/docs/typescript_fundamentals/type_inference_vs_explicit_annotation"}}');var r=i(4848),t=i(8453);const d={sidebar_position:1},c="Tipos primitivos y estructuras",a={},l=[{value:"Tipos primitivos en TS",id:"tipos-primitivos-en-ts",level:2},{value:"Tipos estructurados",id:"tipos-estructurados",level:2},{value:"Tipos especializados",id:"tipos-especializados",level:2},{value:"Inferencia vs Declaraci\xf3n de tipos",id:"inferencia-vs-declaraci\xf3n-de-tipos",level:2},{value:"Clasificaci\xf3n de tipos en TS",id:"clasificaci\xf3n-de-tipos-en-ts",level:2},{value:"Asignaci\xf3n de tipos",id:"asignaci\xf3n-de-tipos",level:2},{value:"Diferencias entre <code>any</code> y <code>unknown</code>",id:"diferencias-entre-any-y-unknown",level:2},{value:"Principios aplicados",id:"principios-aplicados",level:2},{value:"Referencias",id:"referencias",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tipos-primitivos-y-estructuras",children:"Tipos primitivos y estructuras"})}),"\n",(0,r.jsxs)(n.p,{children:["TypeScript es un ",(0,r.jsx)(n.strong,{children:"superset de JavaScript"})," que introduce ",(0,r.jsx)(n.strong,{children:"tipado est\xe1tico opcional"}),", lo cual significa que puedes ",(0,r.jsx)(n.strong,{children:"anotar el tipo de datos que una variable, par\xe1metro o funci\xf3n puede aceptar o devolver"}),", y el compilador puede detectar errores antes de ejecutar el c\xf3digo."]}),"\n",(0,r.jsxs)(n.p,{children:["Esto permite ",(0,r.jsx)(n.strong,{children:"prevenir errores l\xf3gicos"})," y mejorar la ",(0,r.jsx)(n.strong,{children:"introspecci\xf3n del c\xf3digo"}),", especialmente en grandes equipos o proyectos complejos."]}),"\n",(0,r.jsx)(n.h2,{id:"tipos-primitivos-en-ts",children:"Tipos primitivos en TS"}),"\n",(0,r.jsx)(n.p,{children:"Los tipos primitivos representan los valores m\xe1s b\xe1sicos y no estructurados:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Tipo"}),(0,r.jsx)(n.th,{children:"Descripci\xf3n"}),(0,r.jsx)(n.th,{children:"Ejemplo"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"N\xfameros enteros y decimales"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"let age: number = 25;"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Texto"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'let name: string = "David";'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"Verdadero o falso"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"let active: boolean = true;"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"null"})}),(0,r.jsx)(n.td,{children:"Ausencia de valor"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"let x: null = null;"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"Variable sin asignaci\xf3n"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"let y: undefined = undefined;"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bigint"})}),(0,r.jsx)(n.td,{children:"N\xfameros grandes enteros"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"let bigNumber: bigint = 12345678901234567890n;"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"symbol"})}),(0,r.jsx)(n.td,{children:"Valor \xfanico e inmutable"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"const id = Symbol('id');"})})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Por ejemplo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'let edad: number = 30;\nlet nombre: string = "Ana";\nlet esActivo: boolean = false;\nlet identificador: symbol = Symbol("user");\nlet superGrande: bigint = 123456789123456789n;\n'})}),"\n",(0,r.jsx)(n.h2,{id:"tipos-estructurados",children:"Tipos estructurados"}),"\n",(0,r.jsx)(n.p,{children:"Los tipos estructurados (tambi\xe9n llamados compuestos) permiten almacenar y organizar m\xfaltiples valores."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Arrays (arreglos)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'let numbers: number[] = [1, 2, 3];\nlet names: Array<string> = ["Juan", "Ana"];\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Tuplas: Permiten especificar tipos y orden fijo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'let user: [string, number] = ["Carlos", 35];\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Objetos"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'let persona: { nombre: string; edad: number } = {\n  nombre: "Ana",\n  edad: 30,\n};\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"tipos-especializados",children:"Tipos especializados"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Tipo"}),(0,r.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"any"})}),(0,r.jsx)(n.td,{children:"Desactiva el sistema de tipos (usar con precauci\xf3n)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"unknown"})}),(0,r.jsxs)(n.td,{children:["Similar a ",(0,r.jsx)(n.code,{children:"any"}),", pero m\xe1s seguro (requiere verificaci\xf3n de tipo)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Funciones que no retornan valor"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"never"})}),(0,r.jsx)(n.td,{children:"Funciones que nunca terminan correctamente (errores o bucles infinitos)"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Por ejemplo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'function log(mensaje: string): void {\n  console.log(mensaje);\n}\n\nfunction error(): never {\n  throw new Error("Error cr\xedtico");\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"inferencia-vs-declaraci\xf3n-de-tipos",children:"Inferencia vs Declaraci\xf3n de tipos"}),"\n",(0,r.jsx)(n.p,{children:"TypeScript puede inferir el tipo autom\xe1ticamente:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'let city = "Tunja"; // TS infiere que es string\n'})}),"\n",(0,r.jsx)(n.p,{children:"Pero se recomienda declarar tipos expl\xedcitamente en funciones, clases o estructuras complejas para mayor claridad."}),"\n",(0,r.jsx)(n.h2,{id:"clasificaci\xf3n-de-tipos-en-ts",children:"Clasificaci\xf3n de tipos en TS"}),"\n",(0,r.jsx)(n.mermaid,{value:"graph TD\n   A[Tipos en TypeScript]\n   A --\x3e B[Primitivos]\n   A --\x3e C[Estructurados]\n   A --\x3e D[Especiales]\n\n   B --\x3e B1[string]\n   B --\x3e B2[number]\n   B --\x3e B3[boolean]\n   B --\x3e B4[null / undefined]\n   B --\x3e B5[bigint]\n   B --\x3e B6[symbol]\n\n   C --\x3e C1[array]\n   C --\x3e C2[tuple]\n   C --\x3e C3[object]\n\n   D --\x3e D1[any]\n   D --\x3e D2[unknown]\n   D --\x3e D3[void]\n   D --\x3e D4[never]"}),"\n",(0,r.jsx)(n.h2,{id:"asignaci\xf3n-de-tipos",children:"Asignaci\xf3n de tipos"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    autonumber\n    participant Dev\n    participant TSCompiler\n    participant Runtime\n\n    Dev->>TSCompiler: Declara variable con tipo\n    TSCompiler--\x3e>Dev: Verifica tipo est\xe1tico\n    Dev->>Runtime: Ejecuta c\xf3digo\n    Runtime--\x3e>Dev: Retorna valor o error si es incompatible"}),"\n",(0,r.jsxs)(n.h2,{id:"diferencias-entre-any-y-unknown",children:["Diferencias entre ",(0,r.jsx)(n.code,{children:"any"})," y ",(0,r.jsx)(n.code,{children:"unknown"})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Caracter\xedstica"}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.code,{children:"any"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.code,{children:"unknown"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Flexibilidad"}),(0,r.jsx)(n.td,{children:"Total"}),(0,r.jsx)(n.td,{children:"Controlada"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Seguridad de tipos"}),(0,r.jsx)(n.td,{children:"Ninguna"}),(0,r.jsx)(n.td,{children:"Alta (requiere verificaci\xf3n previa)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Uso recomendado"}),(0,r.jsx)(n.td,{children:"Solo migraciones r\xe1pidas"}),(0,r.jsx)(n.td,{children:"C\xf3digo seguro y validado"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"principios-aplicados",children:"Principios aplicados"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Principio"}),(0,r.jsx)(n.th,{children:"Aplicaci\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Clean Code"})}),(0,r.jsx)(n.td,{children:"Tipos expl\xedcitos mejoran la legibilidad y documentaci\xf3n del c\xf3digo"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"SRP (S)"})}),(0,r.jsx)(n.td,{children:"Permite funciones con un prop\xf3sito bien tipado y claro"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Open/Closed (O)"})}),(0,r.jsx)(n.td,{children:"Se pueden extender tipos sin modificar estructuras base"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Clean Architecture"})}),(0,r.jsx)(n.td,{children:"Tipos y contratos definen los l\xedmites claros entre capas"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"referencias",children:"Referencias"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Bierman, G., Abadi, M., & Torgersen, M. (2014). Understanding TypeScript. Microsoft Research."}),"\n",(0,r.jsxs)(n.li,{children:["Microsoft. (s.f.). ",(0,r.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/basic-types.html",children:"TypeScript Handbook: Basic Types"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Mozilla Developer Network. (s.f.). ",(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures",children:"JavaScript Data Types and Structures"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Zakas, N. C. (2012). Maintainable JavaScript: Writing Readable Code. O'Reilly Media."}),"\n",(0,r.jsx)(n.li,{children:"Freeman, E., & Robson, E. (2014). Head First JavaScript Programming. O\u2019Reilly Media."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>c});var s=i(6540);const r={},t=s.createContext(r);function d(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);